{"version":3,"sources":["webpack:///src/app/modules/login/login/login.component.ts","webpack:///src/app/modules/login/login/login.component.html","webpack:///src/app/shared/directives/emailphone-validator.directive.ts","webpack:///src/app/shared/directives/directive.module.ts","webpack:///src/app/shared/directives/passwordvalidator.directive.ts","webpack:///src/app/modules/login/login.module.ts"],"names":["LoginComponent","formBuilder","authService","_router","route","loaderService","submitted","error","isShow","registerForm","group","email","required","password","returnUrl","snapshot","queryParams","callLoading","invalid","loadingSubscription","login","f","value","subscribe","data","user","role","Student","navigateByUrl","toLowerCase","message","loaderState","state","show","controls","unsubscribe","onSubmit","selector","templateUrl","styleUrls","EmailphoneValidatorDirective","validator","emailPhoneValidator","c","control","isValid","test","emailvalidator","valid","provide","useClass","multi","providers","dectLists","DirectiveModule","declarations","imports","exports","PasswordvalidatorDirective","PasswordValidator","routes","path","component","LoginModule","forChild"],"mappings":"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","file":"modules-login-login-module-es5.299d51507a327b13583c.js","sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport { AuthenticationService } from \"@core/authentication/authentication.service\";\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { LoaderState } from '@app/shared/models/loader';\nimport { LoaderService } from '@app/core/services/loader.service';\nimport { Role } from '@app/enum/app_enum';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit,OnDestroy {\n  public registerForm: FormGroup;\n  returnUrl: string;\n  submitted = false;\n  error = '';\n  loadingSubscription: Subscription;\n  isShow: boolean = false;\n\n  constructor(private formBuilder: FormBuilder,\n    private authService: AuthenticationService,\n    private _router: Router,\n    private route: ActivatedRoute, private loaderService: LoaderService,) { }\n\n\n  ngOnInit(): void {\n    this.registerForm = this.formBuilder.group({\n      email: [\"\", [Validators.required]],\n      password: [\"\", [Validators.required]],\n    });\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    this.callLoading();\n    // stop here if form is invalid\n    if (this.registerForm.invalid) {\n      return;\n    } else {\n      this.loadingSubscription = this.authService.login(this.f.email.value, this.f.password.value)\n        .subscribe(\n          data => {\n            // this._router.navigateByUrl(`${data.user.role.toLowerCase()}/home/${data.user.role.toLowerCase()}-home`);\n            if (data.user.role == Role.Student)\n              this._router.navigateByUrl(`${data.user.role.toLowerCase()}/classes/management`);\n            else this._router.navigateByUrl(`${data.user.role.toLowerCase()}/home/${data.user.role.toLowerCase()}-home`);\n          },\n          error => {\n            if(error)\n            this.error = error.message;\n          });\n    }\n  }\n\n  callLoading() {\n    this.loadingSubscription = this.loaderService.loaderState\n      .subscribe((state: LoaderState) => {\n        this.isShow = state.show;\n      });\n  }\n  // convenience getter for easy access to form fields\n  get f() { return this.registerForm.controls; }\n\n  ngOnDestroy(){\n    if(this.loadingSubscription )\n    this.loadingSubscription.unsubscribe();\n  }\n}\n","<div class=\"container\">\n    <h3 class=\"text_p py-3\">Here logo</h3>\n    <div class=\"d-flex justify-content-center flex-column\">\n        <p class=\"text_p sign_text\">Sign In</p>\n\n        <form [formGroup]=\"registerForm\" class=\"col-md-5 mx-auto\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"d-flex error-box\" *ngIf=\"error\">\n                <div>!</div>\n                {{error}}\n            </div>\n\n            <div class=\"form-group\">\n                <app-label>User Email or Phone Number</app-label>\n                <input type=\"text\" formControlName=\"email\" class=\"form-control input-style\"\n                    placeholder=\"Enter your email or phone number\"\n                    [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" appEmailphoneValidator />\n            </div>\n            <div class=\"form-group\">\n                <app-label>Password</app-label>\n                <input type=\"password\" formControlName=\"password\" class=\"form-control input-style\"\n                    placeholder=\"Enter your password\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n            </div>\n            <div class=\"text-center\">\n                <primary-btn>Sign In</primary-btn>\n            </div>\n        </form>\n    </div>\n</div>\n\n<div class=\"overlay\" [class.hidden]=\"!isShow\">\n    <div class=\"overlay__inner\" *ngIf=\"isShow\">\n        <div class=\"overlay__content\"><span class=\"spinner\"></span></div>\n    </div>\n</div>","import { Directive } from '@angular/core';\nimport {  NG_VALIDATORS, ValidatorFn, FormControl } from '@angular/forms';\n\n@Directive({\n  selector: '[appEmailphoneValidator]',\n  providers: [\n    {\n      provide: NG_VALIDATORS,\n      useClass: EmailphoneValidatorDirective,\n      multi: true\n    }\n  ]\n  \n})\nexport class EmailphoneValidatorDirective {\n\n  validator: ValidatorFn;\n  constructor() {\n    this.validator = this.emailPhoneValidator();\n  }\n\n  validate(c: FormControl) {\n    return this.validator(c);\n  }\n\n  emailPhoneValidator(): ValidatorFn {\n    return (control: FormControl) => {\n      if (control.value != null && control.value !== '') {\n        let isValid = /^([_a-z0-9]+(\\.[_a-z0-9]+)*@[a-z0-9-]+(\\.[a-z0-9-]+)*(\\.[a-z]{2,5}))|(\\d+$)$/.test(control.value);\n        if (isValid) {\n          return null;\n        } else {\n          return {\n            emailvalidator: { valid: false }\n          };\n        }\n      } else {\n        return null;\n      }\n    };\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { EmailphoneValidatorDirective } from './emailphone-validator.directive';\nimport { PasswordvalidatorDirective } from './passwordvalidator.directive';\n\nconst dectLists=[\n  EmailphoneValidatorDirective\n];\n\n@NgModule({\n  declarations: [\n    dectLists,\n    PasswordvalidatorDirective,\n\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports:[\n    dectLists\n  ]\n})\nexport class DirectiveModule { }\n","import { Directive } from '@angular/core';\nimport {  NG_VALIDATORS, ValidatorFn, FormControl } from '@angular/forms';\n\n@Directive({\n  selector: '[appPasswordvalidator]',\n  providers: [\n    {\n      provide: NG_VALIDATORS,\n      useClass: PasswordvalidatorDirective,\n      multi: true\n    }\n  ]\n})\nexport class PasswordvalidatorDirective {\n\n  validator: ValidatorFn;\n  constructor() {\n    this.validator = this.PasswordValidator();\n  }\n\n  validate(c: FormControl) {\n    return this.validator(c);\n  }\n\n  PasswordValidator(): ValidatorFn {\n    return (control: FormControl) => {\n      if (control.value != null && control.value !== '') {\n        let isValid = /^([_a-z0-9]+(\\.[_a-z0-9]+)*@[a-z0-9-]+(\\.[a-z0-9-]+)*(\\.[a-z]{2,5}))|(\\d+$)$/.test(control.value);\n        if (isValid) {\n          return null;\n        } else {\n          return {\n            emailvalidator: { valid: false }\n          };\n        }\n      } else {\n        return null;\n      }\n    };\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ReactiveFormsModule, FormsModule } from \"@angular/forms\";\n\n// components\nimport { LoginComponent } from \"./login/login.component\";\n\n// other modules\nimport { BasicComponentsModule } from \"@basic-components/basic-components.module\";\nimport { DirectiveModule } from \"@directives/directive.module\";\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginComponent\n    }\n];\n\n\n@NgModule({\n  declarations: [\n    LoginComponent\n  ],\n  imports: [\n    CommonModule,\n    BasicComponentsModule,\n    RouterModule.forChild(routes),\n    ReactiveFormsModule,\n    FormsModule,\n    DirectiveModule\n  ],\n})\nexport class LoginModule { }\n"]}