{"version":3,"sources":["./src/app/modules/login/login/login.component.ts","./src/app/modules/login/login/login.component.html","./src/app/shared/directives/emailphone-validator.directive.ts","./src/app/shared/directives/directive.module.ts","./src/app/shared/directives/passwordvalidator.directive.ts","./src/app/modules/login/login.module.ts"],"names":[],"mappings":"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","file":"modules-login-login-module-es2015.299d51507a327b13583c.js","sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport { AuthenticationService } from \"@core/authentication/authentication.service\";\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { LoaderState } from '@app/shared/models/loader';\nimport { LoaderService } from '@app/core/services/loader.service';\nimport { Role } from '@app/enum/app_enum';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit,OnDestroy {\n  public registerForm: FormGroup;\n  returnUrl: string;\n  submitted = false;\n  error = '';\n  loadingSubscription: Subscription;\n  isShow: boolean = false;\n\n  constructor(private formBuilder: FormBuilder,\n    private authService: AuthenticationService,\n    private _router: Router,\n    private route: ActivatedRoute, private loaderService: LoaderService,) { }\n\n\n  ngOnInit(): void {\n    this.registerForm = this.formBuilder.group({\n      email: [\"\", [Validators.required]],\n      password: [\"\", [Validators.required]],\n    });\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    this.callLoading();\n    // stop here if form is invalid\n    if (this.registerForm.invalid) {\n      return;\n    } else {\n      this.loadingSubscription = this.authService.login(this.f.email.value, this.f.password.value)\n        .subscribe(\n          data => {\n            // this._router.navigateByUrl(`${data.user.role.toLowerCase()}/home/${data.user.role.toLowerCase()}-home`);\n            if (data.user.role == Role.Student)\n              this._router.navigateByUrl(`${data.user.role.toLowerCase()}/classes/management`);\n            else this._router.navigateByUrl(`${data.user.role.toLowerCase()}/home/${data.user.role.toLowerCase()}-home`);\n          },\n          error => {\n            if(error)\n            this.error = error.message;\n          });\n    }\n  }\n\n  callLoading() {\n    this.loadingSubscription = this.loaderService.loaderState\n      .subscribe((state: LoaderState) => {\n        this.isShow = state.show;\n      });\n  }\n  // convenience getter for easy access to form fields\n  get f() { return this.registerForm.controls; }\n\n  ngOnDestroy(){\n    if(this.loadingSubscription )\n    this.loadingSubscription.unsubscribe();\n  }\n}\n","<div class=\"container\">\n    <h3 class=\"text_p py-3\">Here logo</h3>\n    <div class=\"d-flex justify-content-center flex-column\">\n        <p class=\"text_p sign_text\">Sign In</p>\n\n        <form [formGroup]=\"registerForm\" class=\"col-md-5 mx-auto\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"d-flex error-box\" *ngIf=\"error\">\n                <div>!</div>\n                {{error}}\n            </div>\n\n            <div class=\"form-group\">\n                <app-label>User Email or Phone Number</app-label>\n                <input type=\"text\" formControlName=\"email\" class=\"form-control input-style\"\n                    placeholder=\"Enter your email or phone number\"\n                    [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" appEmailphoneValidator />\n            </div>\n            <div class=\"form-group\">\n                <app-label>Password</app-label>\n                <input type=\"password\" formControlName=\"password\" class=\"form-control input-style\"\n                    placeholder=\"Enter your password\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n            </div>\n            <div class=\"text-center\">\n                <primary-btn>Sign In</primary-btn>\n            </div>\n        </form>\n    </div>\n</div>\n\n<div class=\"overlay\" [class.hidden]=\"!isShow\">\n    <div class=\"overlay__inner\" *ngIf=\"isShow\">\n        <div class=\"overlay__content\"><span class=\"spinner\"></span></div>\n    </div>\n</div>","import { Directive } from '@angular/core';\nimport {  NG_VALIDATORS, ValidatorFn, FormControl } from '@angular/forms';\n\n@Directive({\n  selector: '[appEmailphoneValidator]',\n  providers: [\n    {\n      provide: NG_VALIDATORS,\n      useClass: EmailphoneValidatorDirective,\n      multi: true\n    }\n  ]\n  \n})\nexport class EmailphoneValidatorDirective {\n\n  validator: ValidatorFn;\n  constructor() {\n    this.validator = this.emailPhoneValidator();\n  }\n\n  validate(c: FormControl) {\n    return this.validator(c);\n  }\n\n  emailPhoneValidator(): ValidatorFn {\n    return (control: FormControl) => {\n      if (control.value != null && control.value !== '') {\n        let isValid = /^([_a-z0-9]+(\\.[_a-z0-9]+)*@[a-z0-9-]+(\\.[a-z0-9-]+)*(\\.[a-z]{2,5}))|(\\d+$)$/.test(control.value);\n        if (isValid) {\n          return null;\n        } else {\n          return {\n            emailvalidator: { valid: false }\n          };\n        }\n      } else {\n        return null;\n      }\n    };\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { EmailphoneValidatorDirective } from './emailphone-validator.directive';\nimport { PasswordvalidatorDirective } from './passwordvalidator.directive';\n\nconst dectLists=[\n  EmailphoneValidatorDirective\n];\n\n@NgModule({\n  declarations: [\n    dectLists,\n    PasswordvalidatorDirective,\n\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports:[\n    dectLists\n  ]\n})\nexport class DirectiveModule { }\n","import { Directive } from '@angular/core';\nimport {  NG_VALIDATORS, ValidatorFn, FormControl } from '@angular/forms';\n\n@Directive({\n  selector: '[appPasswordvalidator]',\n  providers: [\n    {\n      provide: NG_VALIDATORS,\n      useClass: PasswordvalidatorDirective,\n      multi: true\n    }\n  ]\n})\nexport class PasswordvalidatorDirective {\n\n  validator: ValidatorFn;\n  constructor() {\n    this.validator = this.PasswordValidator();\n  }\n\n  validate(c: FormControl) {\n    return this.validator(c);\n  }\n\n  PasswordValidator(): ValidatorFn {\n    return (control: FormControl) => {\n      if (control.value != null && control.value !== '') {\n        let isValid = /^([_a-z0-9]+(\\.[_a-z0-9]+)*@[a-z0-9-]+(\\.[a-z0-9-]+)*(\\.[a-z]{2,5}))|(\\d+$)$/.test(control.value);\n        if (isValid) {\n          return null;\n        } else {\n          return {\n            emailvalidator: { valid: false }\n          };\n        }\n      } else {\n        return null;\n      }\n    };\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ReactiveFormsModule, FormsModule } from \"@angular/forms\";\n\n// components\nimport { LoginComponent } from \"./login/login.component\";\n\n// other modules\nimport { BasicComponentsModule } from \"@basic-components/basic-components.module\";\nimport { DirectiveModule } from \"@directives/directive.module\";\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginComponent\n    }\n];\n\n\n@NgModule({\n  declarations: [\n    LoginComponent\n  ],\n  imports: [\n    CommonModule,\n    BasicComponentsModule,\n    RouterModule.forChild(routes),\n    ReactiveFormsModule,\n    FormsModule,\n    DirectiveModule\n  ],\n})\nexport class LoginModule { }\n"],"sourceRoot":"webpack:///"}